{"version":3,"file":"static/js/149.0cb80376.chunk.js","mappings":"2UAmCA,EA/B2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WACzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBACpCN,GAAK,IACRR,UAAWW,EACXb,IAAKA,KAEP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAI1C,MAH0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAEtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CACA,OAAOA,CACT,I,8BCiCA,MA5DA,WAIE,IAAII,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAU,OAAOA,CAAM,IAS5CE,GAAWC,EAAAA,EAAAA,MAEf,OACE,4BAEE,0BAAMH,EAAMI,KAAKC,KAAM,IAAEL,EAAMI,KAAKE,IAAI,uCACxC,mBAAQC,QAAS,WAAML,GAASM,EAAAA,EAAAA,IAAS,IAAI,IAAK,EAAE,SAAC,kBAErD,UAAC,EAAK,YACJ,4BACE,2BACE,wBAAI,OACJ,wBAAI,wBACJ,wBAAI,kBACJ,wBAAI,kBACJ,wBAAI,kBACJ,wBAAI,uBAGR,2BAGIR,EAAMS,KAAKC,KAAI,SAACC,EAAEC,GAChB,OACE,2BACE,wBAAMA,EAAE,KACR,wBAAKZ,EAAMS,KAAKG,GAAGP,QACnB,wBAAKL,EAAMS,KAAKG,GAAGC,SACnB,wBAAI,oCACJ,2BACE,mBAAQN,QAAS,WAAML,GAASY,EAAAA,EAAAA,IAASd,EAAMS,KAAKG,GAAGG,IAAK,EAAE,SAAC,OAC/D,mBAAQR,QAAS,WAAML,GAASc,EAAAA,EAAAA,IAAWhB,EAAMS,KAAKG,GAAGG,IAAK,EAAE,SAAC,UAEnE,yBACE,mBAAQR,QAAS,WAAML,GAASe,EAAAA,EAAAA,IAAWjB,EAAMS,KAAKG,GAAGG,IAAK,EAAE,SAAC,aAV5DH,EAcb,WAOZ,C","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","/* eslint-disable */ //warning 제거\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCount, minusCount, removeCart } from \"../store.js\";\r\nimport { changeName, increase } from \"./../store/userSlice.js\";\r\n\r\n\r\nfunction Cart(){\r\n\r\n  /* 2. Redux 사용하기 */\r\n  /* store.js에서 가져오기 */\r\n  let state = useSelector((state)=>{ return state }) //모든 state 가져옴\r\n  //let userState = useSelector((state)=>{ return state.user }) // user state만 가져옴\r\n  //let stockState = useSelector((state)=>{ return state.stock }) // stock state만 가져옴\r\n  //let state = useSelector((state)=> state) //return과 {중괄호} 동시에 생략 가능\r\n\r\n  /* 가져온거 사용하기 */\r\n  //console.log(state.user) : user 사용하기\r\n  //console.log(state.stock) : stock 사용하기\r\n\r\n  let dispatch = useDispatch()\r\n\r\n  return(\r\n    <div>\r\n\r\n      <h6>{ state.user.name } {state.user.age} 의 장바구니</h6>\r\n      <button onClick={()=>{ dispatch(increase(100,10)) }}>버튼</button>\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>가격</th>\r\n            <th>변경</th>\r\n            <th>삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Redux로 장바구니 상품 가져오기 */}\r\n          {\r\n            state.cart.map((a,i)=>{\r\n              return(\r\n                <tr key={i}>\r\n                  <td>{(i+1)}</td>\r\n                  <td>{state.cart[i].name}</td>\r\n                  <td>{state.cart[i].count}</td>\r\n                  <td>구현해보기</td>\r\n                  <td>\r\n                    <button onClick={()=>{ dispatch(addCount(state.cart[i].id)) }}>+</button>\r\n                    <button onClick={()=>{ dispatch(minusCount(state.cart[i].id)) }}>-</button>\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={()=>{ dispatch(removeCart(state.cart[i].id)) }}>×</button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","state","useSelector","dispatch","useDispatch","user","name","age","onClick","increase","cart","map","a","i","count","addCount","id","minusCount","removeCart"],"sourceRoot":""}